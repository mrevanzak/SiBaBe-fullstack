generator client {
  provider = "cargo prisma"
  output   = "../api/src/prisma.rs"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum CartStatus {
  idle
  checkout
  success
}

enum OrderStatus {
  pending
  payment
  validated
  rejected
  complete
}

enum PaymentMethod {
  ITS_BANK
  COD
}

model admins {
  id          String        @id
  created_at  DateTime?     @default(now()) @db.Timestamp(0)
  updated_at  DateTime?     @updatedAt @db.Timestamp(0)
  username    String        @unique(map: "admins_username_unique") @db.VarChar(255)
  name        String        @db.VarChar(255)
  email       String        @unique(map: "admins_email_unique") @db.VarChar(255)
  productions productions[]
}

model carts {
  id          String     @id @default(uuid())
  created_at  DateTime?  @default(now()) @db.Timestamp(0)
  updated_at  DateTime?  @updatedAt @db.Timestamp(0)
  deleted_at  DateTime?  @db.Timestamp(0)
  total_price Int        @default(0)
  status      CartStatus @default(idle)

  customer_id   String          @db.VarChar(255)
  customer      customers       @relation(fields: [customer_id], references: [id])
  orders        orders[]
  product_carts product_carts[]

  @@index([customer_id])
}

model customers {
  id         String    @id
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)
  username   String    @unique(map: "customers_username_unique") @db.VarChar(255)
  name       String    @db.VarChar(255)
  email      String    @unique(map: "customers_email_unique") @db.VarChar(255)
  address    String?   @db.VarChar(255)
  phone      String?   @db.VarChar(255)
  carts      carts[]
  orders     orders[]
}

model feedbacks {
  id         String    @id @default(uuid())
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
  feedback   String    @db.VarChar(255)
  rating     Int

  product         products          @relation(fields: [product_id], references: [id])
  product_id      String
  feedback_orders feedback_orders[]

  @@index([product_id])
}

model feedback_orders {
  username String   @db.VarChar(255)
  date     DateTime @default(now()) @db.Timestamp(0)

  order    orders @relation(fields: [order_id], references: [id])
  order_id String

  feedback    feedbacks @relation(fields: [feedback_id], references: [id])
  feedback_id String

  @@id([order_id, feedback_id])
  @@index([order_id])
  @@index([feedback_id])
}

model orders {
  id              String            @id @default(uuid())
  created_at      DateTime?         @default(now()) @db.Timestamp(0)
  updated_at      DateTime?         @updatedAt @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  total_product   Int
  total_price     Int
  status          OrderStatus       @default(pending)
  address         String            @db.VarChar(255)
  courier         String            @db.VarChar(255)
  payment_method  PaymentMethod
  payment_proof   String?           @db.VarChar(255)
  validated_by    String?           @db.VarChar(255)
  feedback_orders feedback_orders[]

  cart_id String
  cart    carts  @relation(fields: [cart_id], references: [id])

  customer_id String    @db.VarChar(255)
  customer    customers @relation(fields: [customer_id], references: [id])

  @@index([cart_id])
  @@index([customer_id])
}

model product_carts {
  product_id  String
  cart_id     String
  quantity    Int
  total_price Int
  product     products @relation(fields: [product_id], references: [id])
  cart        carts    @relation(fields: [cart_id], references: [id])
  is_reviewed Boolean  @default(false)

  @@id([product_id, cart_id])
  @@index([product_id])
  @@index([cart_id])
}

model productions {
  id         String    @id @default(uuid())
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)
  date       DateTime  @db.Timestamp(0)
  total_cost Int

  admin_id String @db.VarChar(255)
  admin    admins @relation(fields: [admin_id], references: [id])

  @@index([admin_id])
}

model products {
  id            String          @id @default(uuid())
  name          String          @db.VarChar(255)
  description   String          @db.VarChar(255)
  price         Int
  stock         Int
  image         String          @db.VarChar(255)
  created_at    DateTime?       @default(now()) @db.Timestamp(0)
  updated_at    DateTime?       @updatedAt @db.Timestamp(0)
  deleted_at    DateTime?       @db.Timestamp(0)
  feedback      feedbacks[]
  product_carts product_carts[]
}

model reports {
  date    DateTime @id @default(dbgenerated("(CURRENT_DATE)")) @db.Date
  income  Int      @default(0)
  expense Int      @default(0)
}
